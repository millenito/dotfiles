###################### General #####################
set -g base-index 1 # Numbering start from 1
setw -g pane-base-index 1 
set -g history-limit 10000
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",screen-256color:Tc"
set -g escape-time 0
set -g history-limit 50000
set -g set-titles on
set -g allow-rename off
set -g renumber-windows on
set -g mouse on 

setw -g monitor-activity on

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# synchronize all panes in a window
bind y setw synchronize-panes

# reload config file
bind F12 source-file ~/.tmux.conf \; display-message "Config reloaded!"
##################################################

############ Unbind Original Mappings ############
unbind s        # choose-tree Zs
unbind %        # split-window -h
unbind t        # clock-mode
unbind Space    # next-layout
unbind l        # last-window
unbind w        # choose-tree -Zw
unbind q        # display-panes
unbind c        # new-window
unbind f        # command-prompt "find-window -Z -- '%%'" (find-pane)
unbind o        # select-pane -t :.+ (cycle through panes)
unbind m        # move
##################################################

###################### Panes #####################
bind x kill-pane

# toggle pane zoom/unzoom & create new maximize pane on new window (press again to close)
bind f resize-pane -Z
bind F run "if [[ $(tmux list-window) =~ ZOOM ]]; then tmux last-window; tmux swap-pane -s ZOOM.1; tmux kill-window -t ZOOM; else tmux new-window -d -n ZOOM; tmux swap-pane -s ZOOM.1; tmux select-window -t ZOOM;fi"

# Swap panes
bind K swap-pane -s {up-of}
bind J swap-pane -s {down-of}
bind L swap-pane -s {right-of}
bind H swap-pane -s {left-of} 

# Split like vim windows
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'

# Resize panes with Ctrl+alt+hjkl
bind-key -n C-M-h resize-pane -L 15
bind-key -n C-M-j resize-pane -D 5
bind-key -n C-M-k resize-pane -U 5
bind-key -n C-M-l resize-pane -R 15

# Move pane to a different window vertically (m) or horizontally (M), with choose-tree view
bind-key m choose-window -F "#{window_index}: #{window_name}" "join-pane -h -t %%"
bind-key M choose-window -F "#{window_index}: #{window_name}" "join-pane -v -t %%"
##################################################

#################### Windows #####################
set-window-option -g aggressive-resize
bind a last-window
bind t new-window
bind r rotate-window
bind w kill-window

bind o next-layout
bind O previous-layout
bind Space choose-tree -Zs
bind M-m choose-window -F "#{window_index}: #{window_name}" "swap-window -t %1"
bind r command-prompt -I "#W" "rename-window -- '%%'"
##################################################

#################### Windows #####################
bind q kill-session

bind R command-prompt -I "#S" "rename-session -- '%%'"
bind Q command-prompt -I "kill-session -t " # kill named session
bind T command-prompt -I "new-session -s " # Create new session
bind / command-prompt "find-window -Z -- '%%'" # find-window/session
##################################################

################### Vi/Vim mode ##################
setw -g mode-keys vi # vim copy mode
set -g status-keys emacs # vim status line mode (prefix + :)

bind c copy-mode
bind-key -T copy-mode-vi Escape  send -X cancel # exit vim mode
bind-key -T copy-mode-vi 'v' send -X begin-selection # v begin select
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel # y yanks and exit vim mode
##################################################

################## Status Bar ####################
# Requires powerline font / nerd font
black="#03031b" # background
yellow="#fac863"
red="#EC5f67"
white="#aab2bf" # text
dark_gray="#65737e" # inactive text
blue="#6699cc"
green="#99c794"
gray="#1B2B34" #active_window_bg

set -g status-position bottom
set -g status on
set -g status-justify left

set -gq status-style bg=$black,fg=$white,none
set -gq status-left-style none
set -gq status-left-length 100
set -gq status-right-length 100
set -gq status-right-style none

# command prompt
set -gq message-style fg=$white,bg=$black,none
set -gq message-command-style fg=$white,bg=$black,none

# selected text and highlight trail in copy mode
set -g mode-style fg=$black,bg=$yellow,bright

# bar for showing windows
set-window-option -gq window-status-style fg="$black",bg="black",none
set-window-option -gq window-status-activity-style bg="$red",fg="$black",none
set-window-option -gq window-status-separator ""
set-window-option -gq window-size largest # session always follow largest terminal size

# active/inactive pane colors
set -gq window-style fg=$dark_gray # slightly dim text on inactive pane
set -gq window-active-style fg=$white

# pane borders
set -gq pane-border-style fg=$white,bg=$black,none
set -gq pane-active-border-style fg=$blue,bg=$black,none

set -gq display-panes-active-colour $yellow
set -gq display-panes-colour $blue

status_widgets="#(exec tmux ls | grep attached | wc -l) ATTACHED    #(exec tmux ls | wc -l) SESSIONS  "
# time_format=$(get "@onedark_time_format" "%R")
# date_format=$(get "@onedark_date_format" "%d/%m/%Y")

set -gq status-right "#{prefix_highlight} #[fg=$gray,bg=$black]#[fg=$gray,bg=$gray]#[fg=$white, bg=$gray,bold]${status_widgets} #[fg=$green,bg=$gray,nobold,nounderscore,noitalics]#[fg=$black,bg=$green,bold] #h   #[fg=$yellow, bg=$green]#[fg=$red,bg=$yellow]"
set -gq status-left "#[fg=$black,bg=$red,nobold]   #[fg=$black,bg=$red,bold]#S #[fg=$red,bg=$black,nobold,nounderscore,noitalics]"

set -gq window-status-format "#[fg=$black,bg=$black,nobold,nounderscore,noitalics]#[fg=$dark_gray,bg=$black] #I  #W #[fg=$black,bg=$black,nobold,nounderscore,noitalics]"
set -gq window-status-current-format "#[fg=$black,bg=$gray,nobold,nounderscore,noitalics]#[fg=$white,bg=$gray,nobold] #I  #W #[fg=$gray,bg=$black,nobold,nounderscore,noitalics]"
##################################################

###################### Tmux Plugin Manager #####################
############ https://github.com/tmux-plugins/tpm ###############
# Install the plugin manager:
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#
# Key-bindings:
# prefix + I (Install added plugins)
# prefix + alt + u  (Uninstall removed plugins)
# prefix + u (Update plugins)

set -g @plugin 'christoomey/vim-tmux-navigator'         # Ctrl+hjkl across vim splits and tmux panes
set -g @plugin 'wfxr/tmux-fzf-url'                      # Select all viewable url in tmux pane with fzf
set -g @plugin 'tmux-plugins/tmux-open'                 # Open highlighted selection in copy-mode using XDG-OPEN & search google with Shift+s
set -g @plugin 'pawel-wiejacha/tmux-picker'             # Copy url,paths,ids to clipboard vimium/vimperator style
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'     # Show highlight everytime prefix is pressed 

# tmux-prefix-highlight
set -gq @prefix_highlight_fg "$black"
set -gq @prefix_highlight_bg "$yellow"
set -gq @prefix_highlight_show_copy_mode 'on'
set -gq @prefix_highlight_copy_mode_attr "fg=$black,bg=$yellow"
set -gq @prefix_highlight_output_prefix ""
set -gq @prefix_highlight_output_suffix ""

# tmux fzf-url
set -g @fzf-url-bind 'i'

# automatic install script
setenv -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/plugins/'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run -b '~/.tmux/plugins/tpm/tpm'
################################################################
